{"version":3,"file":"xterm-addon-webgl.js","mappings":"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","sources":["webpack://WebglAddon/webpack/universalModuleDefinition","webpack://WebglAddon/./src/GlyphRenderer.ts","webpack://WebglAddon/./src/RectangleRenderer.ts","webpack://WebglAddon/./src/RenderModel.ts","webpack://WebglAddon/./src/WebglRenderer.ts","webpack://WebglAddon/./src/WebglUtils.ts","webpack://WebglAddon/./src/atlas/CharAtlasCache.ts","webpack://WebglAddon/./src/atlas/CharAtlasUtils.ts","webpack://WebglAddon/./src/atlas/WebglCharAtlas.ts","webpack://WebglAddon/./src/renderLayer/BaseRenderLayer.ts","webpack://WebglAddon/./src/renderLayer/CursorRenderLayer.ts","webpack://WebglAddon/./src/renderLayer/LinkRenderLayer.ts","webpack://WebglAddon/../../src/browser/Lifecycle.ts","webpack://WebglAddon/../../src/browser/renderer/CustomGlyphs.ts","webpack://WebglAddon/../../src/browser/renderer/RendererUtils.ts","webpack://WebglAddon/../../src/browser/renderer/atlas/Constants.ts","webpack://WebglAddon/../../src/common/Color.ts","webpack://WebglAddon/../../src/common/EventEmitter.ts","webpack://WebglAddon/../../src/common/Lifecycle.ts","webpack://WebglAddon/../../src/common/Platform.ts","webpack://WebglAddon/../../src/common/TypedArrayUtils.ts","webpack://WebglAddon/../../src/common/buffer/AttributeData.ts","webpack://WebglAddon/../../src/common/buffer/CellData.ts","webpack://WebglAddon/../../src/common/buffer/Constants.ts","webpack://WebglAddon/../../src/common/input/TextDecoder.ts","webpack://WebglAddon/webpack/bootstrap","webpack://WebglAddon/./src/WebglAddon.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebglAddon\"] = factory();\n\telse\n\t\troot[\"WebglAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { IWebGL2RenderingContext, IWebGLVertexArrayObject, IRenderModel, IRasterizedGlyph } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal, IBufferLine } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\ninterface IVertices {\n  attributes: Float32Array;\n  /**\n   * These buffers are the ones used to bind to WebGL, the reason there are\n   * multiple is to allow double buffering to work as you cannot modify the\n   * buffer while it's being used by the GPU. Having multiple lets us start\n   * working on the next frame.\n   */\n  attributesBuffers: Float32Array[];\n  count: number;\n}\n\nconst enum VertexAttribLocations {\n  UNIT_QUAD = 0,\n  CELL_POSITION = 1,\n  OFFSET = 2,\n  SIZE = 3,\n  TEXCOORD = 4,\n  TEXSIZE = 5\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\nlayout (location = ${VertexAttribLocations.CELL_POSITION}) in vec2 a_cellpos;\nlayout (location = ${VertexAttribLocations.OFFSET}) in vec2 a_offset;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.TEXCOORD}) in vec2 a_texcoord;\nlayout (location = ${VertexAttribLocations.TEXSIZE}) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\n\nuniform sampler2D u_texture;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = texture(u_texture, v_texcoord);\n}`;\n\nconst INDICES_PER_CELL = 10;\nconst BYTES_PER_CELL = INDICES_PER_CELL * Float32Array.BYTES_PER_ELEMENT;\nconst CELL_POSITION_INDICES = 2;\n\nexport class GlyphRenderer {\n  private _atlas: WebglCharAtlas | undefined;\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _projectionLocation: WebGLUniformLocation;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _textureLocation: WebGLUniformLocation;\n  private _atlasTexture: WebGLTexture;\n  private _attributesBuffer: WebGLBuffer;\n  private _activeBuffer: number = 0;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(0),\n    attributesBuffers: [\n      new Float32Array(0),\n      new Float32Array(0)\n    ]\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    const gl = this._gl;\n    const program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this._program = program;\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._textureLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_texture'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertuces to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.OFFSET);\n    gl.vertexAttribPointer(VertexAttribLocations.OFFSET, 2, gl.FLOAT, false, BYTES_PER_CELL, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.OFFSET, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXCOORD);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXCOORD, 2, gl.FLOAT, false, BYTES_PER_CELL, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXCOORD, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXSIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXSIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 6 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXSIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.CELL_POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.CELL_POSITION, 2, gl.FLOAT, false, BYTES_PER_CELL, 8 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.CELL_POSITION, 1);\n\n    // Setup empty texture atlas\n    this._atlasTexture = throwIfFalsy(gl.createTexture());\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 255, 255]));\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    // Allow drawing of transparent texture\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set viewport\n    this.onResize();\n  }\n\n  public beginFrame(): boolean {\n    return this._atlas ? this._atlas.beginFrame() : true;\n  }\n\n  public updateCell(x: number, y: number, code: number, bg: number, fg: number, chars: string): void {\n    this._updateCell(this._vertices.attributes, x, y, code, bg, fg, chars);\n  }\n\n  private _updateCell(array: Float32Array, x: number, y: number, code: number | undefined, bg: number, fg: number, chars?: string): void {\n    const terminal = this._terminal;\n\n    const i = (y * terminal.cols + x) * INDICES_PER_CELL;\n\n    // Exit early if this is a null character, allow space character to continue as it may have\n    // underline/strikethrough styles\n    if (code === NULL_CELL_CODE || code === undefined/* This is used for the right side of wide chars */) {\n      fill(array, 0, i, i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    let rasterizedGlyph: IRasterizedGlyph;\n    if (!this._atlas) {\n      return;\n    }\n\n    // Get the glyph\n    if (chars && chars.length > 1) {\n      rasterizedGlyph = this._atlas.getRasterizedGlyphCombinedChar(chars, bg, fg);\n    } else {\n      rasterizedGlyph = this._atlas.getRasterizedGlyph(code, bg, fg);\n    }\n\n    // Fill empty if no glyph was found\n    if (!rasterizedGlyph) {\n      fill(array, 0, i, i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    // a_origin\n    array[i    ] = -rasterizedGlyph.offset.x + this._dimensions.scaledCharLeft;\n    array[i + 1] = -rasterizedGlyph.offset.y + this._dimensions.scaledCharTop;\n    // a_size\n    array[i + 2] = rasterizedGlyph.size.x / this._dimensions.scaledCanvasWidth;\n    array[i + 3] = rasterizedGlyph.size.y / this._dimensions.scaledCanvasHeight;\n    // a_texcoord\n    array[i + 4] = rasterizedGlyph.texturePositionClipSpace.x;\n    array[i + 5] = rasterizedGlyph.texturePositionClipSpace.y;\n    // a_texsize\n    array[i + 6] = rasterizedGlyph.sizeClipSpace.x;\n    array[i + 7] = rasterizedGlyph.sizeClipSpace.y;\n    // a_cellpos only changes on resize\n  }\n\n  public clear(force?: boolean): void {\n    const terminal = this._terminal;\n    const newCount = terminal.cols * terminal.rows * INDICES_PER_CELL;\n\n    // Don't clear if not forced and the array length is correct\n    if (!force && this._vertices.count === newCount) {\n      return;\n    }\n\n    // Clear vertices\n    this._vertices.count = newCount;\n    this._vertices.attributes = new Float32Array(newCount);\n    for (let i = 0; i < this._vertices.attributesBuffers.length; i++) {\n      this._vertices.attributesBuffers[i] = new Float32Array(newCount);\n    }\n    let i = 0;\n    for (let y = 0; y < terminal.rows; y++) {\n      for (let x = 0; x < terminal.cols; x++) {\n        this._vertices.attributes[i + 8] = x / terminal.cols;\n        this._vertices.attributes[i + 9] = y / terminal.rows;\n        i += INDICES_PER_CELL;\n      }\n    }\n  }\n\n  public onResize(): void {\n    const gl = this._gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    this.clear();\n  }\n\n  public setColors(): void {\n  }\n\n  public render(renderModel: IRenderModel): void {\n    if (!this._atlas) {\n      return;\n    }\n\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Alternate buffers each frame as the active buffer gets locked while it's in use by the GPU\n    this._activeBuffer = (this._activeBuffer + 1) % 2;\n    const activeBuffer = this._vertices.attributesBuffers[this._activeBuffer];\n\n    // Copy data for each cell of each line up to its line length (the last non-whitespace cell)\n    // from the attributes buffer into activeBuffer, which is the one that gets bound to the GPU.\n    // The reasons for this are as follows:\n    // - So the active buffer can be alternated so we don't get blocked on rendering finishing\n    // - To copy either the normal attributes buffer or the selection attributes buffer when there\n    //   is a selection\n    // - So we don't send vertices for all the line-ending whitespace to the GPU\n    let bufferLength = 0;\n    for (let y = 0; y < renderModel.lineLengths.length; y++) {\n      const si = y * this._terminal.cols * INDICES_PER_CELL;\n      const sub = this._vertices.attributes.subarray(si, si + renderModel.lineLengths[y] * INDICES_PER_CELL);\n      activeBuffer.set(sub, bufferLength);\n      bufferLength += sub.length;\n    }\n\n    // Bind the attributes buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, activeBuffer.subarray(0, bufferLength), gl.STREAM_DRAW);\n\n    // Bind the texture atlas if it's changed\n    if (this._atlas.hasCanvasChanged) {\n      this._atlas.hasCanvasChanged = false;\n      gl.uniform1i(this._textureLocation, 0);\n      gl.activeTexture(gl.TEXTURE0 + 0);\n      gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._atlas.cacheCanvas);\n      gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    // Set uniforms\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Draw the viewport\n    gl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, bufferLength / INDICES_PER_CELL);\n  }\n\n  public setAtlas(atlas: WebglCharAtlas): void {\n    const gl = this._gl;\n    this._atlas = atlas;\n\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, atlas.cacheCanvas);\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, expandFloat32Array, PROJECTION_MATRIX, throwIfFalsy } from './WebglUtils';\nimport { IRenderModel, IWebGLVertexArrayObject, IWebGL2RenderingContext } from './Types';\nimport { Attributes, FgFlags } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IColor } from 'common/Types';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\n\nconst enum VertexAttribLocations {\n  POSITION = 0,\n  SIZE = 1,\n  COLOR = 2,\n  UNIT_QUAD = 3\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.POSITION}) in vec2 a_position;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.COLOR}) in vec4 a_color;\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = (a_position + (a_unitquad * a_size)) / u_resolution;\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}`;\n\ninterface IVertices {\n  attributes: Float32Array;\n  count: number;\n}\n\nconst INDICES_PER_RECTANGLE = 8;\nconst BYTES_PER_RECTANGLE = INDICES_PER_RECTANGLE * Float32Array.BYTES_PER_ELEMENT;\n\nconst INITIAL_BUFFER_RECTANGLE_CAPACITY = 20 * INDICES_PER_RECTANGLE;\n\nexport class RectangleRenderer {\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _resolutionLocation: WebGLUniformLocation;\n  private _attributesBuffer: WebGLBuffer;\n  private _projectionLocation: WebGLUniformLocation;\n  private _bgFloat!: Float32Array;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(INITIAL_BUFFER_RECTANGLE_CAPACITY)\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    const gl = this._gl;\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n\n    // Uniform locations\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertuces to allow is to draw 2 triangles from the vertices\n    const unitQuadElementIndices = new Uint8Array([0, 1, 3, 0, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.POSITION, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.POSITION, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.COLOR);\n    gl.vertexAttribPointer(VertexAttribLocations.COLOR, 4, gl.FLOAT, false, BYTES_PER_RECTANGLE, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.COLOR, 1);\n\n    this._updateCachedColors();\n  }\n\n  public render(): void {\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n\n    // Bind attributes buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertices.attributes, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, this._vertices.count);\n  }\n\n  public onResize(): void {\n    this._updateViewportRectangle();\n  }\n\n  public setColors(): void {\n    this._updateCachedColors();\n    this._updateViewportRectangle();\n  }\n\n  private _updateCachedColors(): void {\n    this._bgFloat = this._colorToFloat32Array(this._colors.background);\n  }\n\n  private _updateViewportRectangle(): void {\n    // Set first rectangle that clears the screen\n    this._addRectangleFloat(\n      this._vertices.attributes,\n      0,\n      0,\n      0,\n      this._terminal.cols * this._dimensions.scaledCellWidth,\n      this._terminal.rows * this._dimensions.scaledCellHeight,\n      this._bgFloat\n    );\n  }\n\n  public updateBackgrounds(model: IRenderModel): void {\n    const terminal = this._terminal;\n    const vertices = this._vertices;\n\n    let rectangleCount = 1;\n\n    for (let y = 0; y < terminal.rows; y++) {\n      let currentStartX = -1;\n      let currentBg = 0;\n      let currentFg = 0;\n      let currentInverse = false;\n      for (let x = 0; x < terminal.cols; x++) {\n        const modelIndex = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n        const bg = model.cells[modelIndex + RENDER_MODEL_BG_OFFSET];\n        const fg = model.cells[modelIndex + RENDER_MODEL_FG_OFFSET];\n        const inverse = !!(fg & FgFlags.INVERSE);\n        if (bg !== currentBg || (fg !== currentFg && (currentInverse || inverse))) {\n          // A rectangle needs to be drawn if going from non-default to another color\n          if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n            const offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n            this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, x, y);\n          }\n          currentStartX = x;\n          currentBg = bg;\n          currentFg = fg;\n          currentInverse = inverse;\n        }\n      }\n      // Finish rectangle if it's still going\n      if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n        const offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n        this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, terminal.cols, y);\n      }\n    }\n    vertices.count = rectangleCount;\n  }\n\n  private _updateRectangle(vertices: IVertices, offset: number, fg: number, bg: number, startX: number, endX: number, y: number): void {\n    let rgba: number | undefined;\n    if (fg & FgFlags.INVERSE) {\n      switch (fg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          rgba = this._colors.ansi[fg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          rgba = (fg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          rgba = this._colors.foreground.rgba;\n      }\n    } else {\n      switch (bg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          rgba = this._colors.ansi[bg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          rgba = (bg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          rgba = this._colors.background.rgba;\n      }\n    }\n\n    if (vertices.attributes.length < offset + 4) {\n      vertices.attributes = expandFloat32Array(vertices.attributes, this._terminal.rows * this._terminal.cols * INDICES_PER_RECTANGLE);\n    }\n    const x1 = startX * this._dimensions.scaledCellWidth;\n    const y1 = y * this._dimensions.scaledCellHeight;\n    const r = ((rgba >> 24) & 0xFF) / 255;\n    const g = ((rgba >> 16) & 0xFF) / 255;\n    const b = ((rgba >> 8 ) & 0xFF) / 255;\n\n    this._addRectangle(vertices.attributes, offset, x1, y1, (endX - startX) * this._dimensions.scaledCellWidth, this._dimensions.scaledCellHeight, r, g, b, 1);\n  }\n\n  private _addRectangle(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, r: number, g: number, b: number, a: number): void {\n    array[offset    ] = x1;\n    array[offset + 1] = y1;\n    array[offset + 2] = width;\n    array[offset + 3] = height;\n    array[offset + 4] = r;\n    array[offset + 5] = g;\n    array[offset + 6] = b;\n    array[offset + 7] = a;\n  }\n\n  private _addRectangleFloat(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, color: Float32Array): void {\n    array[offset    ] = x1;\n    array[offset + 1] = y1;\n    array[offset + 2] = width;\n    array[offset + 3] = height;\n    array[offset + 4] = color[0];\n    array[offset + 5] = color[1];\n    array[offset + 6] = color[2];\n    array[offset + 7] = color[3];\n  }\n\n  private _colorToFloat32Array(color: IColor): Float32Array {\n    return new Float32Array([\n      ((color.rgba >> 24) & 0xFF) / 255,\n      ((color.rgba >> 16) & 0xFF) / 255,\n      ((color.rgba >> 8 ) & 0xFF) / 255,\n      ((color.rgba      ) & 0xFF) / 255\n    ]);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderModel, ISelectionRenderModel } from './Types';\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const RENDER_MODEL_INDICIES_PER_CELL = 3;\nexport const RENDER_MODEL_BG_OFFSET = 1;\nexport const RENDER_MODEL_FG_OFFSET = 2;\n\nexport const COMBINED_CHAR_BIT_MASK = 0x80000000;\n\nexport class RenderModel implements IRenderModel {\n  public cells: Uint32Array;\n  public lineLengths: Uint32Array;\n  public selection: ISelectionRenderModel;\n\n  constructor() {\n    this.cells = new Uint32Array(0);\n    this.lineLengths = new Uint32Array(0);\n    this.selection = {\n      hasSelection: false,\n      columnSelectMode: false,\n      viewportStartRow: 0,\n      viewportEndRow: 0,\n      viewportCappedStartRow: 0,\n      viewportCappedEndRow: 0,\n      startCol: 0,\n      endCol: 0\n    };\n  }\n\n  public resize(cols: number, rows: number): void {\n    const indexCount = cols * rows * RENDER_MODEL_INDICIES_PER_CELL;\n    if (indexCount !== this.cells.length) {\n      this.cells = new Uint32Array(indexCount);\n      this.lineLengths = new Uint32Array(rows);\n    }\n  }\n\n  public clear(): void {\n    fill(this.cells, 0, 0);\n    fill(this.lineLengths, 0, 0);\n  }\n\n  public clearSelection(): void {\n    this.selection.hasSelection = false;\n    this.selection.viewportStartRow = 0;\n    this.selection.viewportEndRow = 0;\n    this.selection.viewportCappedStartRow = 0;\n    this.selection.viewportCappedEndRow = 0;\n    this.selection.startCol = 0;\n    this.selection.endCol = 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { GlyphRenderer } from './GlyphRenderer';\nimport { LinkRenderLayer } from './renderLayer/LinkRenderLayer';\nimport { CursorRenderLayer } from './renderLayer/CursorRenderLayer';\nimport { acquireCharAtlas } from './atlas/CharAtlasCache';\nimport { WebglCharAtlas } from './atlas/WebglCharAtlas';\nimport { RectangleRenderer } from './RectangleRenderer';\nimport { IWebGL2RenderingContext } from './Types';\nimport { RenderModel, COMBINED_CHAR_BIT_MASK, RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable } from 'common/Lifecycle';\nimport { Attributes, Content, FgFlags, NULL_CELL_CHAR, NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal, IEvent } from 'xterm';\nimport { IRenderLayer } from './renderLayer/Types';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { ITerminal, IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { CellData } from 'common/buffer/CellData';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { CharData, ICellData } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IDecorationService } from 'common/services/Services';\n\nexport class WebglRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _charAtlas: WebglCharAtlas | undefined;\n  private _devicePixelRatio: number;\n\n  private _model: RenderModel = new RenderModel();\n  private _workCell: CellData = new CellData();\n  private _workColors: { fg: number, bg: number } = { fg: 0, bg: 0 };\n\n  private _canvas: HTMLCanvasElement;\n  private _gl: IWebGL2RenderingContext;\n  private _rectangleRenderer: RectangleRenderer;\n  private _glyphRenderer: GlyphRenderer;\n\n  public dimensions: IRenderDimensions;\n\n  private _core: ITerminal;\n  private _isAttached: boolean;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _terminal: Terminal,\n    private _colors: IColorSet,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    private readonly _decorationService: IDecorationService,\n    preserveDrawingBuffer?: boolean\n  ) {\n    super();\n\n    this._core = (this._terminal as any)._core;\n\n    this._renderLayers = [\n      new LinkRenderLayer(this._core.screenElement!, 2, this._colors, this._core),\n      new CursorRenderLayer(_terminal, this._core.screenElement!, 3, this._colors, this._core, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n\n    this._canvas = document.createElement('canvas');\n\n    const contextAttributes = {\n      antialias: false,\n      depth: false,\n      preserveDrawingBuffer\n    };\n    this._gl = this._canvas.getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n    if (!this._gl) {\n      throw new Error('WebGL2 not supported ' + this._gl);\n    }\n\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextlost', (e) => { this._onContextLoss.fire(e); }));\n\n    this._core.screenElement!.appendChild(this._canvas);\n\n    this._rectangleRenderer = new RectangleRenderer(this._terminal, this._colors, this._gl, this.dimensions);\n    this._glyphRenderer = new GlyphRenderer(this._terminal, this._colors, this._gl, this.dimensions);\n\n    // Update dimensions and acquire char atlas\n    this.onCharSizeChanged();\n\n    this._isAttached = document.body.contains(this._core.screenElement!);\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    this._canvas.parentElement?.removeChild(this._canvas);\n    super.dispose();\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._charAtlas?.cacheCanvas;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._terminal, this._colors);\n      l.reset(this._terminal);\n    }\n\n    this._rectangleRenderer.setColors();\n    this._glyphRenderer.setColors();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._model.clear();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    this._model.resize(this._terminal.cols, this._terminal.rows);\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this._terminal, this.dimensions);\n    }\n\n    // Resize the canvas\n    this._canvas.width = this.dimensions.scaledCanvasWidth;\n    this._canvas.height = this.dimensions.scaledCanvasHeight;\n    this._canvas.style.width = `${this.dimensions.canvasWidth}px`;\n    this._canvas.style.height = `${this.dimensions.canvasHeight}px`;\n\n    // Resize the screen\n    this._core.screenElement!.style.width = `${this.dimensions.canvasWidth}px`;\n    this._core.screenElement!.style.height = `${this.dimensions.canvasHeight}px`;\n\n    this._rectangleRenderer.onResize();\n    this._glyphRenderer.setDimensions(this.dimensions);\n    this._glyphRenderer.onResize();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._model.clear();\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    for (const l of this._renderLayers) {\n      l.onBlur(this._terminal);\n    }\n  }\n\n  public onFocus(): void {\n    for (const l of this._renderLayers) {\n      l.onFocus(this._terminal);\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    for (const l of this._renderLayers) {\n      l.onSelectionChanged(this._terminal, start, end, columnSelectMode);\n    }\n    this._updateSelectionModel(start, end, columnSelectMode);\n    this._requestRedrawViewport();\n  }\n\n  public onCursorMove(): void {\n    for (const l of this._renderLayers) {\n      l.onCursorMove(this._terminal);\n    }\n  }\n\n  public onOptionsChanged(): void {\n    for (const l of this._renderLayers) {\n      l.onOptionsChanged(this._terminal);\n    }\n    this._updateDimensions();\n    this._refreshCharAtlas();\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(): void {\n    if (this.dimensions.scaledCharWidth <= 0 && this.dimensions.scaledCharHeight <= 0) {\n      // Mark as not attached so char atlas gets refreshed on next render\n      this._isAttached = false;\n      return;\n    }\n\n    const atlas = acquireCharAtlas(this._terminal, this._colors, this.dimensions.scaledCellWidth, this.dimensions.scaledCellHeight, this.dimensions.scaledCharWidth, this.dimensions.scaledCharHeight);\n    if (!('getRasterizedGlyph' in atlas)) {\n      throw new Error('The webgl renderer only works with the webgl char atlas');\n    }\n    this._charAtlas = atlas as WebglCharAtlas;\n    this._charAtlas.warmUp();\n    this._glyphRenderer.setAtlas(this._charAtlas);\n  }\n\n  public clearCharAtlas(): void {\n    this._charAtlas?.clearTexture();\n    this._model.clear();\n    this._updateModel(0, this._terminal.rows - 1);\n    this._requestRedrawViewport();\n  }\n\n  public clear(): void {\n    this._model.clear();\n    this._glyphRenderer.clear(true);\n    for (const l of this._renderLayers) {\n      l.reset(this._terminal);\n    }\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return -1;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return false;\n  }\n\n  public renderRows(start: number, end: number): void {\n    if (!this._isAttached) {\n      if (document.body.contains(this._core.screenElement!) && (this._core as any)._charSizeService.width && (this._core as any)._charSizeService.height) {\n        this._updateDimensions();\n        this._refreshCharAtlas();\n        this._isAttached = true;\n      } else {\n        return;\n      }\n    }\n\n    // Update render layers\n    for (const l of this._renderLayers) {\n      l.onGridChanged(this._terminal, start, end);\n    }\n\n    // Tell renderer the frame is beginning\n    if (this._glyphRenderer.beginFrame()) {\n      this._model.clear();\n      this._updateSelectionModel(undefined, undefined);\n    }\n\n    // Update model to reflect what's drawn\n    this._updateModel(start, end);\n\n    // Render\n    this._rectangleRenderer.render();\n    this._glyphRenderer.render(this._model);\n  }\n\n  private _updateModel(start: number, end: number): void {\n    const terminal = this._core;\n    let cell: ICellData = this._workCell;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + terminal.buffer.ydisp;\n      const line = terminal.buffer.lines.get(row)!;\n      this._model.lineLengths[y] = 0;\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < terminal.cols; x++) {\n        line.loadCell(x, cell);\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            cell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        const chars = cell.getChars();\n        let code = cell.getCode();\n        const i = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n\n        // Load colors/resolve overrides into work colors\n        this._loadColorsForCell(x, row);\n\n        if (code !== NULL_CELL_CODE) {\n          this._model.lineLengths[y] = x + 1;\n        }\n\n        // Nothing has changed, no updates needed\n        if (this._model.cells[i] === code &&\n            this._model.cells[i + RENDER_MODEL_BG_OFFSET] === this._workColors.bg &&\n            this._model.cells[i + RENDER_MODEL_FG_OFFSET] === this._workColors.fg) {\n          continue;\n        }\n\n        // Flag combined chars with a bit mask so they're easily identifiable\n        if (chars.length > 1) {\n          code |= COMBINED_CHAR_BIT_MASK;\n        }\n\n        // Cache the results in the model\n        this._model.cells[i] = code;\n        this._model.cells[i + RENDER_MODEL_BG_OFFSET] = this._workColors.bg;\n        this._model.cells[i + RENDER_MODEL_FG_OFFSET] = this._workColors.fg;\n\n        this._glyphRenderer.updateCell(x, y, code, this._workColors.bg, this._workColors.fg, chars);\n\n        if (isJoined) {\n          // Restore work cell\n          cell = this._workCell;\n\n          // Null out non-first cells\n          for (x++; x < lastCharX; x++) {\n            const j = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n            this._glyphRenderer.updateCell(x, y, NULL_CELL_CODE, 0, 0, NULL_CELL_CHAR);\n            this._model.cells[j] = NULL_CELL_CODE;\n            this._model.cells[j + RENDER_MODEL_BG_OFFSET] = this._workColors.bg;\n            this._model.cells[j + RENDER_MODEL_FG_OFFSET] = this._workColors.fg;\n          }\n        }\n      }\n    }\n    this._rectangleRenderer.updateBackgrounds(this._model);\n  }\n\n  /**\n   * Loads colors for the cell into the work colors object. This resolves overrides/inverse if\n   * necessary which is why the work cell object is not used.\n   */\n  private _loadColorsForCell(x: number, y: number): void {\n    this._workColors.bg = this._workCell.bg;\n    this._workColors.fg = this._workCell.fg;\n\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n    let bgOverride: number | undefined;\n    let fgOverride: number | undefined;\n\n    // Apply decorations on the bottom layer\n    for (const d of this._decorationService.getDecorationsAtCell(x, y, 'bottom')) {\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Apply the selection color if needed\n    if (this._isCellSelected(x, y)) {\n      bgOverride = this._colors.selectionOpaque.rgba >> 8 & 0xFFFFFF;\n      if (this._colors.selectionForeground) {\n        fgOverride = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Apply decorations on the top layer\n    for (const d of this._decorationService.getDecorationsAtCell(x, y, 'top')) {\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n      }\n    }\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if (bgOverride !== undefined) {\n      // Non-RGB attributes from model + override + force RGB color mode\n      bgOverride = (this._workCell.bg & ~Attributes.RGB_MASK) | bgOverride | Attributes.CM_RGB;\n    }\n    if (fgOverride !== undefined) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      fgOverride = (this._workCell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | fgOverride | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bgOverride or fgOverride was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this._workColors.fg & FgFlags.INVERSE) {\n      if (bgOverride !== undefined && fgOverride === undefined) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this._workColors.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          fgOverride = (this._workColors.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | ((this._colors.background.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          fgOverride = (this._workColors.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this._workColors.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n      }\n      if (bgOverride === undefined && fgOverride !== undefined) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this._workColors.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          bgOverride = (this._workColors.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | ((this._colors.foreground.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          bgOverride = (this._workColors.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this._workColors.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n      }\n    }\n\n    // Use the override if it exists\n    this._workColors.bg = bgOverride ?? this._workColors.bg;\n    this._workColors.fg = fgOverride ?? this._workColors.fg;\n  }\n\n  private _isCellSelected(x: number, y: number): boolean {\n    if (!this._model.selection.hasSelection) {\n      return false;\n    }\n    y -= this._terminal.buffer.active.viewportY;\n    if (this._model.selection.columnSelectMode) {\n      if (this._model.selection.startCol <= this._model.selection.endCol) {\n        return x >= this._model.selection.startCol && y >= this._model.selection.viewportCappedStartRow &&\n          x < this._model.selection.endCol && y <= this._model.selection.viewportCappedEndRow;\n      }\n      return x < this._model.selection.startCol && y >= this._model.selection.viewportCappedStartRow &&\n        x >= this._model.selection.endCol && y <= this._model.selection.viewportCappedEndRow;\n    }\n    return (y > this._model.selection.viewportStartRow && y < this._model.selection.viewportEndRow) ||\n      (this._model.selection.viewportStartRow === this._model.selection.viewportEndRow && y === this._model.selection.viewportStartRow && x >= this._model.selection.startCol && x < this._model.selection.endCol) ||\n      (this._model.selection.viewportStartRow < this._model.selection.viewportEndRow && y === this._model.selection.viewportEndRow && x < this._model.selection.endCol) ||\n      (this._model.selection.viewportStartRow < this._model.selection.viewportEndRow && y === this._model.selection.viewportStartRow && x >= this._model.selection.startCol);\n  }\n\n  private _updateSelectionModel(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    const terminal = this._terminal;\n\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this._model.clearSelection();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this._model.clearSelection();\n      return;\n    }\n\n    this._model.selection.hasSelection = true;\n    this._model.selection.columnSelectMode = columnSelectMode;\n    this._model.selection.viewportStartRow = viewportStartRow;\n    this._model.selection.viewportEndRow = viewportEndRow;\n    this._model.selection.viewportCappedStartRow = viewportCappedStartRow;\n    this._model.selection.viewportCappedEndRow = viewportCappedEndRow;\n    this._model.selection.startCol = start[0];\n    this._model.selection.endCol = end[0];\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // TODO: Acquire CharSizeService properly\n\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!(this._core as any)._charSizeService.width || !(this._core as any)._charSizeService.height) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n\n    // NOTE: ceil fixes sometime, floor does others :s\n\n    this.dimensions.scaledCharWidth = Math.floor((this._core as any)._charSizeService.width * this._devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil((this._core as any)._charSizeService.height * this._devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight!);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing!);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing! / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / this._devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / this._devicePixelRatio);\n\n    // this.dimensions.scaledCanvasHeight = this.dimensions.canvasHeight * devicePixelRatio;\n    // this.dimensions.scaledCanvasWidth = this.dimensions.canvasWidth * devicePixelRatio;\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. CharMeasure.width/height by itself is\n    // insufficient when the page is not at 100% zoom level as CharMeasure is\n    // measured in CSS pixels, but the actual char size on the canvas can\n    // differ.\n    // this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    // this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n\n    // This fixes 110% and 125%, not 150% or 175% though\n    this.dimensions.actualCellHeight = this.dimensions.scaledCellHeight / this._devicePixelRatio;\n    this.dimensions.actualCellWidth = this.dimensions.scaledCellWidth / this._devicePixelRatio;\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n}\n\n// TODO: Share impl with core\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A matrix that when multiplies will translate 0-1 coordinates (left to right,\n * top to bottom) to clip space.\n */\nexport const PROJECTION_MATRIX = new Float32Array([\n  2, 0, 0, 0,\n  0, -2, 0, 0,\n  0, 0, 1, 0,\n  -1, 1, 0, 1\n]);\n\nexport function createProgram(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram | undefined {\n  const program = throwIfFalsy(gl.createProgram());\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.VERTEX_SHADER, vertexSource)));\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.FRAGMENT_SHADER, fragmentSource)));\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = throwIfFalsy(gl.createShader(type));\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.error(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function expandFloat32Array(source: Float32Array, max: number): Float32Array {\n  const newLength = Math.min(source.length * 2, max);\n  const newArray = new Float32Array(newLength);\n  for (let i = 0; i < source.length; i++) {\n    newArray[i] = source[i];\n  }\n  return newArray;\n}\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport { WebglCharAtlas } from './WebglCharAtlas';\nimport { ICharAtlasConfig } from './Types';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\n\ninterface ICharAtlasCacheEntry {\n  atlas: WebglCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: Terminal,\n  colors: IColorSet,\n  scaledCellWidth: number,\n  scaledCellHeight: number,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): WebglCharAtlas {\n  const newConfig = generateConfig(scaledCellWidth, scaledCellHeight, scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new WebglCharAtlas(document, newConfig),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { Terminal, FontWeight } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nconst NULL_COLOR: IColor = {\n  css: '',\n  rgba: 0\n};\n\nexport function generateConfig(scaledCellWidth: number, scaledCellHeight: number, scaledCharWidth: number, scaledCharHeight: number, terminal: Terminal, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionTransparent: NULL_COLOR,\n    selectionOpaque: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: terminal.options.customGlyphs!,\n    devicePixelRatio: window.devicePixelRatio,\n    letterSpacing: terminal.options.letterSpacing!,\n    lineHeight: terminal.options.lineHeight!,\n    scaledCellWidth,\n    scaledCellHeight,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.options.fontFamily!,\n    fontSize: terminal.options.fontSize!,\n    fontWeight: terminal.options.fontWeight as FontWeight,\n    fontWeightBold: terminal.options.fontWeightBold as FontWeight,\n    allowTransparency: terminal.options.allowTransparency!,\n    drawBoldTextInBrightColors: terminal.options.drawBoldTextInBrightColors!,\n    minimumContrastRatio: terminal.options.minimumContrastRatio!,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IRasterizedGlyph, IBoundingBox, IRasterizedGlyphSet } from '../Types';\nimport { DEFAULT_COLOR, Attributes } from 'common/buffer/Constants';\nimport { throwIfFalsy } from '../WebglUtils';\nimport { IColor } from 'common/Types';\nimport { IDisposable } from 'xterm';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { channels, rgba } from 'common/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\nimport { excludeFromContrastRatioDemands, isPowerlineGlyph } from 'browser/renderer/RendererUtils';\n\n// For debugging purposes, it can be useful to set this to a really tiny value,\n// to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\n/**\n * The amount of the texture to be filled before throwing it away and starting\n * again. Since the throw away and individual glyph draws don't cost too much,\n * this prevent juggling multiple textures in the GL context.\n */\nconst TEXTURE_CAPACITY = Math.floor(TEXTURE_HEIGHT * 0.8);\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  offset: { x: 0, y: 0 },\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nexport class WebglCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: { [code: number]: IRasterizedGlyphSet } = {};\n  private _cacheMapCombined: { [chars: string]: IRasterizedGlyphSet } = {};\n\n  // The texture that the atlas is drawn to\n  public cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // Since glyphs are expected to be around the same height, the packing\n  // strategy used it to fill a row with glyphs while keeping track of the\n  // tallest glyph in the row. Once the row is full a new row is started at\n  // (0,lastRow+lastRowTallestGlyph).\n  private _currentRowY: number = 0;\n  private _currentRowX: number = 0;\n  private _currentRowHeight: number = 0;\n\n  public hasCanvasChanged = false;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  constructor(\n    document: Document,\n    private _config: ICharAtlasConfig\n  ) {\n    this.cacheCanvas = document.createElement('canvas');\n    this.cacheCanvas.width = TEXTURE_WIDTH;\n    this.cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this.cacheCanvas.getContext('2d', { alpha: true }));\n\n    this._tmpCanvas = document.createElement('canvas');\n    this._tmpCanvas.width = this._config.scaledCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCanvas.height = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 2;\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n  }\n\n  public dispose(): void {\n    if (this.cacheCanvas.parentElement) {\n      this.cacheCanvas.parentElement.removeChild(this.cacheCanvas);\n    }\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126\n    for (let i = 33; i < 126; i++) {\n      const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR);\n      this._cacheMap[i] = {\n        [DEFAULT_COLOR]: {\n          [DEFAULT_COLOR]: rasterizedGlyph\n        }\n      };\n    }\n  }\n\n  public beginFrame(): boolean {\n    if (this._currentRowY > TEXTURE_CAPACITY) {\n      this.clearTexture();\n      this.warmUp();\n      return true;\n    }\n    return false;\n  }\n\n  public clearTexture(): void {\n    if (this._currentRowX === 0 && this._currentRowY === 0) {\n      return;\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._cacheMap = {};\n    this._cacheMapCombined = {};\n    this._currentRowHeight = 0;\n    this._currentRowX = 0;\n    this._currentRowY = 0;\n    this._didWarmUp = false;\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number): IRasterizedGlyph {\n    let rasterizedGlyphSet = this._cacheMapCombined[chars];\n    if (!rasterizedGlyphSet) {\n      rasterizedGlyphSet = {};\n      this._cacheMapCombined[chars] = rasterizedGlyphSet;\n    }\n    let rasterizedGlyph: IRasterizedGlyph | undefined;\n    const rasterizedGlyphSetBg = rasterizedGlyphSet[bg];\n    if (rasterizedGlyphSetBg) {\n      rasterizedGlyph = rasterizedGlyphSetBg[fg];\n    }\n    if (!rasterizedGlyph) {\n      rasterizedGlyph = this._drawToCache(chars, bg, fg);\n      if (!rasterizedGlyphSet[bg]) {\n        rasterizedGlyphSet[bg] = {};\n      }\n      rasterizedGlyphSet[bg]![fg] = rasterizedGlyph;\n    }\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  public getRasterizedGlyph(code: number, bg: number, fg: number): IRasterizedGlyph {\n    let rasterizedGlyphSet = this._cacheMap[code];\n    if (!rasterizedGlyphSet) {\n      rasterizedGlyphSet = {};\n      this._cacheMap[code] = rasterizedGlyphSet;\n    }\n    let rasterizedGlyph: IRasterizedGlyph | undefined;\n    const rasterizedGlyphSetBg = rasterizedGlyphSet[bg];\n    if (rasterizedGlyphSetBg) {\n      rasterizedGlyph = rasterizedGlyphSetBg[fg];\n    }\n    if (!rasterizedGlyph) {\n      rasterizedGlyph = this._drawToCache(code, bg, fg);\n      if (!rasterizedGlyphSet[bg]) {\n        rasterizedGlyphSet[bg] = {};\n      }\n      rasterizedGlyphSet[bg]![fg] = rasterizedGlyph;\n    }\n    return rasterizedGlyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor);\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        return {\n          rgba: bgColor << 8,\n          css: `#${toPaddedHex(arr[0])}${toPaddedHex(arr[1])}${toPaddedHex(arr[2])}`\n        };\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground;\n        }\n        return this._config.colors.background;\n    }\n  }\n\n  private _getForegroundCss(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): string {\n    const minimumContrastCss = this._getMinimumContrastCss(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold, excludeFromContrastRatioDemands);\n    if (minimumContrastCss) {\n      return minimumContrastCss;\n    }\n\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).css;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        return channels.toCss(arr[0], arr[1], arr[2]);\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          const bg = this._config.colors.background.css;\n          if (bg.length === 9) {\n            // Remove bg alpha channel if present\n            return bg.slice(0, 7);\n          }\n          return bg;\n        }\n        return this._config.colors.foreground.css;\n    }\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastCss(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): string | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getCss(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setCss(bg, fg, null);\n      return undefined;\n    }\n\n    const css = channels.toCss(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setCss(bg, fg, css);\n\n    return css;\n  }\n\n  private _drawToCache(code: number, bg: number, fg: number): IRasterizedGlyph;\n  private _drawToCache(chars: string, bg: number, fg: number): IRasterizedGlyph;\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    this.hasCanvasChanged = true;\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = this._config.scaledCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = this._config.scaledCellHeight + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerLineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    this._tmpCtx.fillStyle = this._getForegroundCss(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, bold, excludeFromContrastRatioDemands(chars.charCodeAt(0)));\n\n    // Apply alpha to dim the character\n    if (dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = powerLineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING;\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._config.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight);\n    }\n\n    // If this charcater is underscore and beyond the cell bounds, shift it up until it is visible,\n    // try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.clearRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.fillText(chars, padding, padding + this._config.scaledCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.scaledCellWidth, this._config.scaledCellHeight), backgroundColor);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw underline and strikethrough\n    if (underline || strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      if (underline) {\n        this._tmpCtx.moveTo(padding, padding + this._config.scaledCharHeight - yOffset);\n        this._tmpCtx.lineTo(padding + this._config.scaledCharWidth, padding + this._config.scaledCharHeight - yOffset);\n      }\n      if (strikethrough) {\n        this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n        this._tmpCtx.lineTo(padding + this._config.scaledCharWidth, padding + Math.floor(this._config.scaledCharHeight / 2) - yOffset);\n      }\n      this._tmpCtx.stroke();\n      this._tmpCtx.closePath();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // TODO: Support transparency\n    // let isEmpty = false;\n    // if (!this._config.allowTransparency) {\n    //   isEmpty = clearColor(imageData, backgroundColor);\n    // }\n\n    // Clear out the background color and determine if the glyph is empty.\n    const isEmpty = clearColor(imageData, backgroundColor);\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, powerLineGlyph, drawSuccess);\n    const clippedImageData = this._clipImageData(imageData, this._workBoundingBox);\n\n    // Check if there is enough room in the current row and go to next if needed\n    if (this._currentRowX + rasterizedGlyph.size.x > TEXTURE_WIDTH) {\n      this._currentRowX = 0;\n      this._currentRowY += this._currentRowHeight;\n      this._currentRowHeight = 0;\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePosition.x = this._currentRowX;\n    rasterizedGlyph.texturePosition.y = this._currentRowY;\n    rasterizedGlyph.texturePositionClipSpace.x = this._currentRowX / TEXTURE_WIDTH;\n    rasterizedGlyph.texturePositionClipSpace.y = this._currentRowY / TEXTURE_HEIGHT;\n\n    // Update atlas current row\n    this._currentRowHeight = Math.max(this._currentRowHeight, rasterizedGlyph.size.y);\n    this._currentRowX += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(clippedImageData, rasterizedGlyph.texturePosition.x, rasterizedGlyph.texturePosition.y);\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.scaledCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.scaledCharWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = width - 1; x >= 0; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1) / TEXTURE_WIDTH,\n        y: (boundingBox.bottom - boundingBox.top + 1) / TEXTURE_HEIGHT\n      },\n      offset: {\n        x: -boundingBox.left + (restrictedGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING) + (customGlyph ? Math.floor(this._config.letterSpacing / 2) : 0),\n        y: -boundingBox.top + (restrictedGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING) + (customGlyph ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.scaledCellHeight - this._config.scaledCharHeight) / 2) : 0)\n      }\n    };\n  }\n\n  private _clipImageData(imageData: ImageData, boundingBox: IBoundingBox): ImageData {\n    const width = boundingBox.right - boundingBox.left + 1;\n    const height = boundingBox.bottom - boundingBox.top + 1;\n    const clippedData = new Uint8ClampedArray(width * height * 4);\n    for (let y = boundingBox.top; y <= boundingBox.bottom; y++) {\n      for (let x = boundingBox.left; x <= boundingBox.right; x++) {\n        const oldOffset = y * this._tmpCanvas.width * 4 + x * 4;\n        const newOffset = (y - boundingBox.top) * width * 4 + (x - boundingBox.left) * 4;\n        clippedData[newOffset] = imageData.data[oldOffset];\n        clippedData[newOffset + 1] = imageData.data[oldOffset + 1];\n        clippedData[newOffset + 2] = imageData.data[oldOffset + 2];\n        clippedData[newOffset + 3] = imageData.data[oldOffset + 3];\n      }\n    }\n    return new ImageData(clippedData, width, height);\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { acquireCharAtlas } from '../atlas/CharAtlasCache';\nimport { Terminal } from 'xterm';\nimport { IColorSet } from 'browser/Types';\nimport { TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { WebglCharAtlas } from 'atlas/WebglCharAtlas';\nimport { throwIfFalsy } from '../WebglUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: WebglCharAtlas | undefined;\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {}\n  public onBlur(terminal: Terminal): void {}\n  public onFocus(terminal: Terminal): void {}\n  public onCursorMove(terminal: Terminal): void {}\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(terminal: Terminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected _setTransparency(terminal: Terminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: Terminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCellWidth, this._scaledCellHeight, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: Terminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(terminal: Terminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(terminal, y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param terminal The terminal.\n   * @param y The row to clip.\n   */\n  private _clipRow(terminal: Terminal, y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      terminal.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: Terminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize! * window.devicePixelRatio}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet, ITerminal } from 'browser/Types';\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { IEventEmitter } from 'common/EventEmitter';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: Terminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    private readonly _terminal: ITerminal,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRedrawEvent>\n  ) {\n    super(container, 'cursor', zIndex, true, colors);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this.onOptionsChanged(terminal);\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n    this.onOptionsChanged(terminal);\n  }\n\n  public onBlur(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onFocus(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.resume(terminal);\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onOptionsChanged(terminal: Terminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, () => {\n          this._render(terminal, true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public onCursorMove(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n  }\n\n  public onGridChanged(terminal: Terminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: Terminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    // TODO: Need to expose API for this\n    if (!this._terminal.coreService.isCursorInitialized || this._terminal.coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.active.baseY + terminal.buffer.active.cursorY;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.active.viewportY;\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(terminal.buffer.active.cursorX, terminal.cols - 1);\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // TODO: Need fast buffer API for loading cell\n    (terminal as any)._core.buffer.lines.get(cursorY).loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!isTerminalFocused(terminal)) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = terminal.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](terminal, cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(terminal, cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle!;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === isTerminalFocused(terminal) &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle!;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, terminal.options.cursorWidth!);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    terminal: Terminal,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isTerminalFocused(terminal)) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: Terminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(terminal: Terminal): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n\nfunction isTerminalFocused(terminal: Terminal): boolean {\n  return document.activeElement === terminal.textarea && document.hasFocus();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from '../atlas/CharAtlasUtils';\nimport { ITerminal, IColorSet, ILinkifierEvent } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, terminal: ITerminal) {\n    super(container, 'link', zIndex, true, colors);\n    terminal.linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    terminal.linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    terminal.linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg !== undefined && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg!].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  /** Padding to apply to the vector's x axis in CSS pixels. */\n  horizontalPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.STROKE, horizontalPadding: 0.5 }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.beginPath();\n  ctx.lineWidth = window.devicePixelRatio;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, charDefinition.horizontalPadding));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, horizontalPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (horizontalPadding * 2 * window.devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (horizontalPadding * window.devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, bgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, bgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon, IEvent } from 'xterm';\nimport { WebglRenderer } from './WebglRenderer';\nimport { ICharacterJoinerService, IRenderService } from 'browser/services/Services';\nimport { IColorSet } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { isSafari } from 'common/Platform';\nimport { IDecorationService } from 'common/services/Services';\n\nexport class WebglAddon implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: WebglRenderer;\n  private _onContextLoss = new EventEmitter<void>();\n  public get onContextLoss(): IEvent<void> { return this._onContextLoss.event; }\n\n  constructor(\n    private _preserveDrawingBuffer?: boolean\n  ) {}\n\n  public activate(terminal: Terminal): void {\n    if (!terminal.element) {\n      throw new Error('Cannot activate WebglAddon before Terminal.open');\n    }\n    if (isSafari) {\n      throw new Error('Webgl is not currently supported on Safari');\n    }\n    this._terminal = terminal;\n    const renderService: IRenderService = (terminal as any)._core._renderService;\n    const characterJoinerService: ICharacterJoinerService = (terminal as any)._core._characterJoinerService;\n    const decorationService: IDecorationService = (terminal as any)._core._decorationService;\n    const colors: IColorSet = (terminal as any)._core._colorManager.colors;\n    this._renderer = new WebglRenderer(terminal, colors, characterJoinerService, decorationService, this._preserveDrawingBuffer);\n    this._renderer.onContextLoss(() => this._onContextLoss.fire());\n    renderService.setRenderer(this._renderer);\n  }\n\n  public dispose(): void {\n    if (!this._terminal) {\n      throw new Error('Cannot dispose WebglAddon because it is activated');\n    }\n    const renderService: IRenderService = (this._terminal as any)._core._renderService;\n    renderService.setRenderer((this._terminal as any)._core._createRenderer());\n    renderService.onResize(this._terminal.cols, this._terminal.rows);\n    this._renderer = undefined;\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearCharAtlas();\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","INDICES_PER_CELL","BYTES_PER_CELL","Float32Array","BYTES_PER_ELEMENT","_terminal","_colors","_gl","_dimensions","_activeBuffer","_vertices","count","attributes","attributesBuffers","gl","this","program","throwIfFalsy","createProgram","_program","_projectionLocation","getUniformLocation","_resolutionLocation","_textureLocation","_vertexArrayObject","createVertexArray","bindVertexArray","unitQuadVertices","unitQuadVerticesBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","unitQuadElementIndices","Uint8Array","elementIndicesBuffer","ELEMENT_ARRAY_BUFFER","_attributesBuffer","vertexAttribDivisor","_atlasTexture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","onResize","beginFrame","_atlas","updateCell","x","y","code","bg","fg","chars","_updateCell","array","rasterizedGlyph","i","cols","NULL_CELL_CODE","undefined","length","getRasterizedGlyphCombinedChar","getRasterizedGlyph","offset","scaledCharLeft","scaledCharTop","size","scaledCanvasWidth","scaledCanvasHeight","texturePositionClipSpace","sizeClipSpace","fill","clear","force","terminal","newCount","rows","viewport","canvas","width","height","setColors","render","renderModel","useProgram","activeBuffer","bufferLength","lineLengths","si","sub","subarray","set","STREAM_DRAW","hasCanvasChanged","uniform1i","activeTexture","TEXTURE0","cacheCanvas","generateMipmap","uniformMatrix4fv","PROJECTION_MATRIX","uniform2f","drawElementsInstanced","TRIANGLES","setAtlas","atlas","setDimensions","dimensions","GlyphRenderer","BYTES_PER_RECTANGLE","_updateCachedColors","DYNAMIC_DRAW","_updateViewportRectangle","_bgFloat","_colorToFloat32Array","background","_addRectangleFloat","scaledCellWidth","scaledCellHeight","updateBackgrounds","model","vertices","rectangleCount","currentStartX","currentBg","currentFg","currentInverse","modelIndex","RENDER_MODEL_INDICIES_PER_CELL","cells","RENDER_MODEL_BG_OFFSET","RENDER_MODEL_FG_OFFSET","inverse","_updateRectangle","startX","endX","rgba","ansi","foreground","expandFloat32Array","x1","y1","r","g","b","_addRectangle","a","color","RectangleRenderer","COMBINED_CHAR_BIT_MASK","Uint32Array","selection","hasSelection","columnSelectMode","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startCol","endCol","resize","indexCount","clearSelection","RenderModel","_characterJoinerService","_decorationService","preserveDrawingBuffer","_model","_workCell","CellData","_workColors","_onRequestRedraw","EventEmitter","_onContextLoss","_core","_renderLayers","LinkRenderLayer","screenElement","CursorRenderLayer","scaledCharWidth","scaledCharHeight","canvasWidth","canvasHeight","actualCellWidth","actualCellHeight","_devicePixelRatio","window","devicePixelRatio","_updateDimensions","_canvas","document","createElement","contextAttributes","antialias","depth","getContext","Error","register","addDisposableDomListener","e","fire","appendChild","_rectangleRenderer","_glyphRenderer","onCharSizeChanged","_isAttached","body","contains","event","dispose","parentElement","removeChild","_charAtlas","colors","l","reset","_refreshCharAtlas","onDevicePixelRatioChange","style","onBlur","onFocus","onSelectionChanged","start","end","_updateSelectionModel","_requestRedrawViewport","onCursorMove","onOptionsChanged","acquireCharAtlas","warmUp","clearCharAtlas","clearTexture","_updateModel","registerCharacterJoiner","handler","deregisterCharacterJoiner","joinerId","renderRows","_charSizeService","onGridChanged","cell","row","buffer","ydisp","line","lines","get","joinedRanges","getJoinedCharacters","loadCell","isJoined","lastCharX","range","shift","JoinedCellData","translateToString","getChars","getCode","_loadColorsForCell","j","NULL_CELL_CHAR","bgOverride","fgOverride","getDecorationsAtCell","d","backgroundColorRGB","foregroundColorRGB","_isCellSelected","selectionOpaque","selectionForeground","active","viewportY","Math","max","min","floor","ceil","options","lineHeight","round","letterSpacing","Disposable","WebglRenderer","firstCell","content","combinedData","_width","isCombined","getWidth","setFromCharData","value","getAsCharData","AttributeData","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","newLength","newArray","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","indexOf","configEquals","config","splice","push","newEntry","WebglCharAtlas","index","NULL_COLOR","css","clonedColors","cursor","cursorAccent","selectionTransparent","slice","contrastCache","customGlyphs","fontFamily","fontSize","fontWeight","fontWeightBold","allowTransparency","drawBoldTextInBrightColors","minimumContrastRatio","colorCode","TEXTURE_WIDTH","TEXTURE_HEIGHT","TEXTURE_CAPACITY","TRANSPARENT_COLOR","NULL_RASTERIZED_GLYPH","texturePosition","_config","_didWarmUp","_cacheMap","_cacheMapCombined","_currentRowY","_currentRowX","_currentRowHeight","_workBoundingBox","top","left","bottom","right","_workAttributeData","_cacheCtx","alpha","_tmpCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","_doWarmUp","_drawToCache","DEFAULT_COLOR","clearRect","rasterizedGlyphSet","rasterizedGlyphSetBg","_getColorFromAnsiIndex","idx","_getBackgroundColor","bgColorMode","bgColor","arr","toColorRGB","toPaddedHex","_getForegroundCss","fgColorMode","fgColor","bold","excludeFromContrastRatioDemands","minimumContrastCss","_getMinimumContrastCss","channels","toCss","_resolveBackgroundRgba","_resolveForegroundRgba","adjustedColor","getCss","bgRgba","fgRgba","result","ensureContrastRatio","setCss","codeOrChars","String","fromCharCode","allowedWidth","allowedHeight","save","isInvisible","isBold","isInverse","dim","isDim","italic","isItalic","underline","isUnderline","strikethrough","isStrikethrough","getFgColor","getFgColorMode","getBgColor","getBgColorMode","temp","temp2","backgroundColor","globalCompositeOperation","fillStyle","fillRect","fontStyle","font","textBaseline","TEXT_BASELINE","powerLineGlyph","isPowerlineGlyph","charCodeAt","globalAlpha","DIM_OPACITY","padding","drawSuccess","tryDrawCustomChar","fillText","isBeyondCellBounds","clearColor","getImageData","lineWidth","yOffset","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","restore","imageData","_findGlyphBoundingBox","clippedImageData","_clipImageData","putImageData","boundingBox","restrictedGlyph","customGlyph","found","alphaOffset","data","clippedData","Uint8ClampedArray","oldOffset","newOffset","ImageData","isEmpty","c","s","toString","_container","id","zIndex","_alpha","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","classList","add","_initCanvas","_ctx","_clearAll","startRow","endRow","colorSet","_setTransparency","oldCanvas","cloneNode","replaceChild","_fillCells","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","_getFont","_clipRow","rect","clip","BaseRenderLayer","BLINK_INTERVAL","container","_onRequestRefreshRowsEvent","_cell","_state","isFocused","_cursorRenderers","_renderBarCursor","bind","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","restartBlinkAnimation","pause","cursorY","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","coreService","isCursorInitialized","isCursorHidden","baseY","viewportRelativeCursorY","cursorX","isTerminalFocused","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","clearTimeout","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","setTimeout","time","setInterval","activeElement","textarea","hasFocus","linkifier","onShowLinkUnderline","_onShowLinkUnderline","onHideLinkUnderline","_onHideLinkUnderline","linkifier2","_clearCurrentLink","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","node","addEventListener","disposed","removeEventListener","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","horizontalPadding","ctx","xOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","Map","pattern","tmpCanvas","tmpCtx","startsWith","parseInt","substring","split","map","parseFloat","createPattern","drawPatternChar","boxDrawingDefinition","Object","entries","instructions","Number","actualInstructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","drawBoxDrawingChar","powerlineDefinition","drawPowerlineChar","clamp","bezierCurveTo","cellWidth","cellHeight","codepoint","isBoxOrBlockGlyph","isFirefox","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","rgb","contrastRatio","l1","l2","toRgba","blend","fgR","fgG","fgB","bgR","bgG","bgB","isOpaque","ratio","toColor","opaque","rgbaColor","toChannels","opacity","match","repeat","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultB","resultA","resultARatio","_listeners","_disposed","_event","listener","arg1","arg2","queue","call","from","to","_disposables","_isDisposed","unregister","disposeArray","disposables","isNode","navigator","userAgent","platform","includes","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","fillFallback","constructor","extended","ExtendedAttrs","fromColorRGB","clone","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","hasExtendedAttrs","updateExtended","getUnderlineColor","underlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","underlineStyle","fromCharData","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","second","CHAR_DATA_WIDTH_INDEX","DEFAULT_ATTR","CHAR_DATA_CODE_INDEX","NULL_CELL_WIDTH","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","codePoint","_interim","decode","input","target","startPos","StringToUtf32","interim","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","_preserveDrawingBuffer","activate","element","renderService","_renderService","characterJoinerService","decorationService","_colorManager","_renderer","onContextLoss","setRenderer","_createRenderer","textureAtlas","clearTextureAtlas","WebglAddon"],"sourceRoot":""}